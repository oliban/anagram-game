name: Run Tests

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]

jobs:
  test-services:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: test_password
          POSTGRES_DB: anagram_game_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies - Game Server
      working-directory: services/game-server
      run: npm ci

    - name: Install dependencies - Web Dashboard
      working-directory: services/web-dashboard
      run: npm ci

    - name: Install dependencies - Link Generator
      working-directory: services/link-generator
      run: npm ci

    - name: Set up test database
      env:
        DB_HOST: localhost
        DB_USER: postgres
        DB_PASSWORD: test_password
        DB_NAME: anagram_game_test
      run: |
        # Install PostgreSQL client
        sudo apt-get update
        sudo apt-get install -y postgresql-client
        
        # Create test schema
        PGPASSWORD=test_password psql -h localhost -U postgres -d anagram_game_test -f services/shared/database/schema.sql

    - name: Run service health tests
      env:
        DB_HOST: localhost
        DB_USER: postgres
        DB_PASSWORD: test_password
        DB_NAME: anagram_game_test
        NODE_ENV: test
      run: |
        # Test database connection
        cd services/game-server
        node -e "
          const { testConnection } = require('./shared/database/connection');
          testConnection().then(() => {
            console.log('✅ Database connection test passed');
            process.exit(0);
          }).catch(err => {
            console.error('❌ Database connection test failed:', err);
            process.exit(1);
          });
        "

    - name: Test Docker builds
      run: |
        # Test that all Docker images build successfully
        docker build -f services/game-server/Dockerfile -t test-game-server .
        docker build -f services/web-dashboard/Dockerfile -t test-web-dashboard .
        docker build -f services/link-generator/Dockerfile -t test-link-generator .
        echo "✅ All Docker images built successfully"

  test-ios:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - name: Build iOS app
      run: |
        xcodebuild -project "Anagram Game.xcodeproj" \
          -scheme "Anagram Game" \
          -destination 'platform=iOS Simulator,name=iPhone 15' \
          build

    - name: Run iOS tests
      run: |
        xcodebuild test \
          -project "Anagram Game.xcodeproj" \
          -scheme "Anagram Game" \
          -destination 'platform=iOS Simulator,name=iPhone 15'